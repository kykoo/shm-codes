#!/bin/bash

calc_wt_size() {
  # NOTE: it's tempting to redirect stderr to /dev/null, so supress error       
  # output from tput. However in this case, tput detects neither stdout or      
  # stderr is a tty and so only gives default 80, 24 values                     
    WT_HEIGHT=17
    WT_WIDTH=$(tput cols)

    if [ -z "$WT_WIDTH" ] || [ "$WT_WIDTH" -lt 60 ]; then
	WT_WIDTH=80
    fi
    if [ "$WT_WIDTH" -gt 178 ]; then
	WT_WIDTH=120
    fi
    WT_MENU_HEIGHT=$(($WT_HEIGHT-7))
}

choose_AP() {
    echo "ap"
    
    FUN=$(whiptail --title "VESHM-NODE-CONFIG" --radiolist "Choose a WiFi"  $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT \
	"WINGS" "" ON \
	"AP2" "" OFF \
	"AP3" "" OFF \
	3>&1 1>&2 2>&3)
    exit 0
}

echo "------------------------"
echo " VESHM-NODE-CONFIG v0.1"
echo "------------------------"
#echo " Press RETRUN key to start..."

# WAIT FOR USER INPUT TO START 
# for ((i = 10 ; i > 0 ; i--)); 
# do
#     echo -n $i ". "
#     read -t 1 -a input || continue
#     echo "break"
#     break
# done
# 
# if [ $i == 0 ]; then
#     echo
#     exit 0
# fi
# 

calc_wt_size
# echo $WT_HEIGHT
# echo $WT_WIDTH
# echo $WT_MENU_HEIGHT
# FUN=$(whiptail --title "VESHM-NODE-CONFIG" --menu "Setup Options" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT \
# 	--cancel-button Finish --ok-button Select \
#             "1 WiFi-AP" "Choose a WiFi Access Point." \
#             "2 WiFi-AP" "Choose a WiFi Access Point." \
#  3>&1 1>&2 2>&3)
# echo "RET=" $?
# echo "FUN=" $FUN
# exit 0
while true; do
    FUN=$(whiptail --title "VESHM-NODE-CONFIG" --menu "Setup Options" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT \
	--cancel-button Finish --ok-button Select \
        "1 WiFi-AP" "Choose a WiFi Access Point." \
	3>&1 1>&2 2>&3)

    RET=$?
    echo "FUN=" $FUN
    echo "RET=" $RET
    if [ $RET -eq 1 ]; then
	echo "finish" #do_finish
    elif [ $RET -eq 0 ]; then
	case "$FUN" in
	    1\ *) choose_AP ;;
	    *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
	esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
    else
	exit 1
    fi
done




#  |  whiptail --gauge "Please wait while we are sleeping..." 6 50 0


# whiptail --title "Check list example" --checklist \
# "Choose user's permissions" 20 78 4 \
# "NET_OUTBOUND" "Allow connections to other hosts" ON \
# "NET_INBOUND" "Allow connections from other hosts" OFF \
# "LOCAL_MOUNT" "Allow mounting of local devices" OFF \
# "REMOTE_MOUNT" "Allow mounting of remote devices" OFF
